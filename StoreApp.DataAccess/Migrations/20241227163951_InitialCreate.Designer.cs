// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreApp.DataAccess.Context;

#nullable disable

namespace StoreApp.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241227163951_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StoreApp.Entities.Entity.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "943b4f45-4a0f-48e2-a901-c7cc947c0a29",
                            CreatedDate = new DateTime(2024, 12, 27, 19, 39, 51, 123, DateTimeKind.Local).AddTicks(5094),
                            Description = "Mobile Phones",
                            ModifiedDate = new DateTime(2024, 12, 27, 19, 39, 51, 123, DateTimeKind.Local).AddTicks(5105),
                            Name = "Phones"
                        },
                        new
                        {
                            Id = "f8d3d601-03ab-459b-9504-94851fa5d2a6",
                            CreatedDate = new DateTime(2024, 12, 27, 19, 39, 51, 123, DateTimeKind.Local).AddTicks(5109),
                            Description = "Notebook Computers",
                            ModifiedDate = new DateTime(2024, 12, 27, 19, 39, 51, 123, DateTimeKind.Local).AddTicks(5109),
                            Name = "Laptops"
                        });
                });

            modelBuilder.Entity("StoreApp.Entities.Entity.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "51ab4e9e-bd33-476e-ab06-2de86f0bb937",
                            CategoryId = "943b4f45-4a0f-48e2-a901-c7cc947c0a29",
                            CreatedDate = new DateTime(2024, 12, 27, 19, 39, 51, 123, DateTimeKind.Local).AddTicks(6985),
                            Description = "Apple iPhone 14 128GB",
                            ImageUrl = "images/iphone14.jpg",
                            ModifiedDate = new DateTime(2024, 12, 27, 19, 39, 51, 123, DateTimeKind.Local).AddTicks(6989),
                            Name = "iPhone 14",
                            Price = 999.99m,
                            Stock = 100
                        },
                        new
                        {
                            Id = "e809d187-f851-4228-bb80-35e057cea01b",
                            CategoryId = "f8d3d601-03ab-459b-9504-94851fa5d2a6",
                            CreatedDate = new DateTime(2024, 12, 27, 19, 39, 51, 123, DateTimeKind.Local).AddTicks(6993),
                            Description = "Samsung Galaxy S23 256GB",
                            ImageUrl = "images/galaxys23.jpg",
                            ModifiedDate = new DateTime(2024, 12, 27, 19, 39, 51, 123, DateTimeKind.Local).AddTicks(6994),
                            Name = "Samsung Galaxy S23",
                            Price = 899.99m,
                            Stock = 75
                        });
                });

            modelBuilder.Entity("StoreApp.Entities.Entity.Product", b =>
                {
                    b.HasOne("StoreApp.Entities.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("StoreApp.Entities.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
